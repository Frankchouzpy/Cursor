项目概况:
此项目首先需要你创建一个文件夹，名为“Single_tunnel”，把你所有生成的相关文件都放在此文件夹中。
一、你的目的是用python设计一个app，这个app需要有UI界面，现在对于UI界面和程序的详细如下.

	1. 对UI界面的要求：
		（1）上部app标题为“Single Tunnel Settlement Calculator”
		（2）标题下面为隧道参数输入框，提示用户输入各隧道参数：H, R, Vl, gama1, gama3, theta, 和beta；
		（3）参数输入分别为每个“某参数输入的提示+该参数输入框”提示输入H，然后一个输入框提示用户输入该参数；提示输入R，输入框；……；提示输入beta，然后beta输入框。
		（4）第（3）步中的输入和输入框依次排列为一行，然后如果排列过长超过ui界面，超过ui界面宽度的参数和输入框自动换行到后面一行。
		（5）参数输入后面有一个启动分析的按钮（按钮名字你根据程序进行命名），用户输入完成后点击此按钮会自动计算W(x, H, R, Vl, gama1, gama3, theta, beta)；
		（6）点击启动分析按钮后，会提示程序正在计算；
		（7）计算完成后，会显示计算完成；
		（8）接下来是图形显示区，用以展示计算得到的沉降曲线，即W(x, H, R, Vl, gama1, gama3, theta, beta)。

	2.对于W(x, H, R, Vl, gama1, gama3, theta, beta)的计算，总体设计为：
		2.1 提示用户输入的参数包括以下7个：
			（1）隧道埋深：H；
			（2）隧道半径：R；
			（3）地层损失率：Vl；
			（4）第一偏压参数：gama1；
			（5）第三偏压参数：gama3；
			（6）偏压角度：theta；
			（7）地层影响角：beta。
		2.2 因为程序中用到了三角函数tan、cos和sin，所以程序应该基于python考虑到三角函数计算中theta和beta是应该用度数还是弧度。用户输入theta和beta的值是角度值，即为度数，例如用户输入beta值为45，表示角度为45度，即输入的是pi/2，那么下面的f_1表达式中tan(beta)的值应该为1。

		2.3 中间变量的计算：
			（1） u0=R-R*sqrt(1-Vl)；
			（2） u2=R*sqrt(1-Vl)-R*(1-Vl)/(sqrt(1-Vl)+gama1)；
			（3） A=H-R；
			（4） B=H+R；
			（5） C=-sqrt(R^2-(mu-H)^2)；
			（6） D=-C；
			（7） f_1=tan(beta)/mu；
			（8） f_2=-pi*tan(beta)^2*(x-sigema)^2/mu^2；
			（9）  f(x)=f_1*exp(f_2)；
			（10）A_1=-R+u0+gama1*R；
			（11）B_1=-A_1；
			（12） C_1=-(R-u0+u2)*sqrt(1-(muhat/(R-u0-gama1*R))^2)；
			（13） D_1=-C_1；
			（14） g_11=H+(gama3*R+muhat)*cos(theta)+sigemahat*sin(theta)；
			（15） g_1=tan(beta)/g_11；
			（16） g_21=-pi*tan(beta)^2*(x+(gama3*R+muhat)*sin(theta)-sigemahat*cos(theta))^2；
			（17） g_22=(H+(gama3*R+muhat)*cos(theta)+sigemahat*sin(theta))^2；
			（18） g_2=g_21/g_22；
			（19） g(x)=g_1*exp(g_2)。
		
		2.4 有了以上19个表达式后，计算F(x)和G(x):
			（1）对f(x)进行积分，第一次积分变量为mu，积分区间为[A, B]（即积分区间为A到B），第二次积分变量为sigema，积分区间为[C, D]（即积分区间为C到D），经过两次积分后得到关于x的函数F(x)；
			（2）对g(x)进行积分，第一次积分变量为muhat，积分区间为[A_1, B_1]（即积分区间为A_1到B_1），第二次积分变量为sigemahat，积分区间为[C_1, D_1]（即积分区间为C_1到D_1]），经过两次积分后得到关于x的函数G(x)。

		2.5 计算得到最终要求的函数W(x, H, R, Vl, gama1, gama3, theta, beta):
			W(x, H, R, Vl, gama1, gama3, theta, beta)=-1000*(F(x)-G(x))；

二、双重积分选择建议：
双重积分可以选用scipy.integrate 中的 dblquad 函数，或者Legendre-Gauss method，如果积分区间较大或函数变化剧烈，可以考虑使用 nquad 进行自适应积分，但是如果你有更好的（或者更有效的）积分方法，请你利用最好的那种。

三、UI界面图形区程序要求：
	1.图形显示区右上角应该有坐标缩放、平移功能，按下相应的按键可方便用户进行细节的缩放平移等；
	2.图形显示区右上角应该有点标记功能，按下标记按键，用户可以图形上点击任意一点查看此点坐标；
	3.图片显示区右上角应有保存按键，用户点击保存按键，会弹出对话框，可以将图片显示区的图片以用户喜欢的文件名保存在用户想要保存的路径。